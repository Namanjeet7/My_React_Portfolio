name: Run tests then Deploy

on:
  push:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    name: Run test suite
    runs-on: ubuntu-latest
    env:
      COMPOSE_FILE: ./Dockerfile.ci

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Build Docker image
      run: docker build -t main -f $COMPOSE_FILE .

    - name: Create Docker network
      run: docker network create storybook-net

    - name: Start Storybook
      run: |
        docker run -d --name storybook-container --network storybook-net -p 6006:6006 main npm run storybook
        echo "Waiting for Storybook to be accessible..."
        until docker exec storybook-container curl -s http://localhost:6006 > /dev/null; do echo "Still waiting..."; sleep 30; done

    - name: Run Storybook tests
      run: docker run --rm --network storybook-net main sh -c "npm run test:storybook -- --url http://storybook-container:6006/?path=/docs/configure-your-project--docs --verbose"

    - name: Cleanup
      run: |
        docker stop storybook-container
        docker network rm storybook-net

  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'
        
    - name: Install Vercel CLI
      run: npm install -g vercel

    - name: Deploy to Vercel
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      run: vercel --prod --token $VERCEL_TOKEN
